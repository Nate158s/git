variables:
  Agent.Source.Git.ShallowFetchDepth: 1

jobs:
- job: download_prereqs
  displayName: Download git-sdk-64-minimal and vcpkg artifacts
  condition: succeeded()
  pool: Hosted VS2017
  timeoutInMinutes: 240
  steps:
  - powershell: |
      $urlbase = "https://dev.azure.com/git-for-windows/git/_apis/build/builds"
      $id = ((Invoke-WebRequest -UseBasicParsing "${urlbase}?definitions=22&statusFilter=completed&resultFilter=succeeded&`$top=1").content | ConvertFrom-JSON).value[0].id
      $downloadUrl = ((Invoke-WebRequest -UseBasicParsing "${urlbase}/$id/artifacts").content | ConvertFrom-JSON).value[1].resource.downloadUrl
      (New-Object Net.WebClient).DownloadFile($downloadUrl,"git-sdk-64-minimal.zip")
      Expand-Archive git-sdk-64-minimal.zip -DestinationPath . -Force
      Remove-Item git-sdk-64-minimal.zip

      # Let Git ignore the SDK and the test-cache
      "/git-sdk-64-minimal/`n/test-cache/`n" | Out-File -NoNewLine -Encoding ascii -Append "$(Build.SourcesDirectory)\.git\info\exclude"

      # Provide a minimal /bin/install for use by Git's `make install`
      @"
      #!/bin/sh

      die () {
        echo "`$*" >&2
        exit 1
      }

      dir_mode=
      while case "`$1" in
      -d) dir_mode=t;;
      -m) shift;;
      -m*) ;;
      -*) die "Unknown option: `$1";;
      *) break;;
      esac; do shift; done

      if test -z "`$dir_mode" && test $# -ge 2
      then
        cp "`$@"
      elif test -n "`$dir_mode" && test `$# = 1
      then
        mkdir -p "`$1"
      else
        die "Unhandled arguments: `$* (dir: `${dir_mode:-f})"
      fi
      "@ | Out-File -NoNewLine -Encoding ascii git-sdk-64-minimal\usr\bin\install
      if (!$?) { exit(1) }

      # Initialize bare-repo.git and download MinGit
      & git-sdk-64-minimal\usr\bin\bash.exe -lxec @"
        git init --bare bare-repo.git &&
        git -C bare-repo.git fetch https://github.com/torvalds/linux/ v2.6.21 &&
        git -C bare-repo.git gc --aggressive &&

        curl -Lo MinGit.zip https://github.com/git-for-windows/git/releases/download/v2.23.0.windows.1/MinGit-2.23.0-64-bit.zip &&
        mkdir -p MinGit &&
        unzip MinGit.zip -d MinGit &&
        cp /etc/profile MinGit/etc/
      "@
      if (!$?) { exit(1) }
    displayName: 'Download git-sdk-64-minimal'
  - powershell: |
      $urlbase = "https://dev.azure.com/git/git/_apis/build/builds"
      $id = ((Invoke-WebRequest -UseBasicParsing "${urlbase}?definitions=9&statusFilter=completed&resultFilter=succeeded&`$top=1").content | ConvertFrom-JSON).value[0].id
      $downloadUrl = ((Invoke-WebRequest -UseBasicParsing "${urlbase}/$id/artifacts").content | ConvertFrom-JSON).value[0].resource.downloadUrl
      (New-Object Net.WebClient).DownloadFile($downloadUrl, "compat.zip")
      Expand-Archive compat.zip -DestinationPath vcpkg-artifacts -Force
      Remove-Item compat.zip
    displayName: 'Download vcpkg artifacts'
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: git-sdk-64-minimal'
    inputs:
      artifactName: 'git-sdk-64-minimal'
      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo.git'
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: MinGit'
    inputs:
      artifactName: 'MinGit'
      targetPath: '$(Build.SourcesDirectory)\MinGit'
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: vcpkg-artifacts'
    inputs:
      artifactName: 'vcpkg-artifacts'
      targetPath: '$(Build.SourcesDirectory)\vcpkg-artifacts'

- job: gcc_build
  displayName: Windows (GCC) Build
  dependsOn: download_prereqs
  condition: succeeded()
  pool: Hosted VS2017
  timeoutInMinutes: 240
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: git-sdk-64-minimal'
    inputs:
      artifactName: 'git-sdk-64-minimal'
      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit'
    inputs:
      artifactName: 'MinGit'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-system-allocator'
  - powershell: |
      & git-sdk-64-minimal\usr\bin\bash.exe -lxec @"
        make -j10 &&
        make -j10 strip &&
        make -j10 DESTDIR=MinGit-gcc-system-allocator SKIP_DASHED_BUILT_INS=1 gitexecdir=bin install
      "@
      if (!$?) { exit(1) }
    displayName: Build
    env:
      HOME: $(Build.SourcesDirectory)
      MSYSTEM: MINGW64
      NDEBUG: 1
      DEVELOPER: 1
      NO_PERL: 1
      NO_TCLTK: 1
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: MinGit-gcc-system-allocator'
    inputs:
      artifactName: 'MinGit-gcc-system-allocator'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-system-allocator'

- job: gcc_nedmalloc_build
  displayName: Windows (GCC/nedmalloc) Build
  dependsOn: download_prereqs
  condition: succeeded()
  pool: Hosted VS2017
  timeoutInMinutes: 240
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: git-sdk-64-minimal'
    inputs:
      artifactName: 'git-sdk-64-minimal'
      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit'
    inputs:
      artifactName: 'MinGit'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-nedmalloc'
  - powershell: |
      & git-sdk-64-minimal\usr\bin\bash.exe -lxec @"
        make -j10 USE_NED_ALLOCATOR=YesPlease &&
        make -j10 USE_NED_ALLOCATOR=YesPlease strip &&
        make -j10 USE_NED_ALLOCATOR=YesPlease DESTDIR=MinGit-gcc-nedmalloc SKIP_DASHED_BUILT_INS=1 gitexecdir=bin install
      "@
      if (!$?) { exit(1) }
    displayName: Build
    env:
      HOME: $(Build.SourcesDirectory)
      MSYSTEM: MINGW64
      NDEBUG: 1
      DEVELOPER: 1
      NO_PERL: 1
      NO_TCLTK: 1
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: MinGit-gcc-nedmalloc'
    inputs:
      artifactName: 'MinGit-gcc-nedmalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-nedmalloc'

- job: gcc_mimalloc_build
  displayName: Windows (GCC/mimalloc) Build
  dependsOn: download_prereqs
  condition: succeeded()
  pool: Hosted VS2017
  timeoutInMinutes: 240
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: git-sdk-64-minimal'
    inputs:
      artifactName: 'git-sdk-64-minimal'
      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit'
    inputs:
      artifactName: 'MinGit'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-mimalloc'
  - powershell: |
      & git-sdk-64-minimal\usr\bin\bash.exe -lxec @"
        make -j10 USE_MIMALLOC=YesPlease &&
        make -j10 USE_MIMALLOC=YesPlease strip &&
        make -j10 USE_MIMALLOC=YesPlease DESTDIR=MinGit-gcc-mimalloc SKIP_DASHED_BUILT_INS=1 gitexecdir=bin install
      "@
      if (!$?) { exit(1) }
    displayName: Build
    env:
      HOME: $(Build.SourcesDirectory)
      MSYSTEM: MINGW64
      NDEBUG: 1
      DEVELOPER: 1
      NO_PERL: 1
      NO_TCLTK: 1
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: MinGit-gcc-mimalloc'
    inputs:
      artifactName: 'MinGit-gcc-mimalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-mimalloc'

- job: msvc_build
  displayName: Windows (MSVC) Build
  dependsOn: download_prereqs
  condition: succeeded()
  pool: Hosted VS2017
  timeoutInMinutes: 240
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: git-sdk-64-minimal'
    inputs:
      artifactName: 'git-sdk-64-minimal'
      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: vcpkg-artifacts'
    inputs:
      artifactName: 'vcpkg-artifacts'
      targetPath: '$(Build.SourcesDirectory)'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit'
    inputs:
      artifactName: 'MinGit'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-system-allocator'
  - powershell: |
      & compat\vcbuild\vcpkg_copy_dlls.bat release
      & git-sdk-64-minimal\usr\bin\bash.exe -lxec @"
        make -j5 &&
        make -j10 strip &&
        make -j10 DESTDIR=MinGit-msvc-system-allocator SKIP_DASHED_BUILT_INS=1 gitexecdir=bin install
      "@
      if (!$?) { exit(1) }
    displayName: Build
    env:
      HOME: $(Build.SourcesDirectory)
      MSYSTEM: MINGW64
      MSVC: 1
      NDEBUG: 1
      DEVELOPER: 1
      NO_PERL: 1
      NO_TCLTK: 1
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: MinGit-msvc-system-allocator'
    inputs:
      artifactName: 'MinGit-msvc-system-allocator'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-system-allocator'

- job: msvc_nedmalloc_build
  displayName: Windows (MSVC/nedmalloc) Build
  dependsOn: download_prereqs
  condition: succeeded()
  pool: Hosted VS2017
  timeoutInMinutes: 240
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: git-sdk-64-minimal'
    inputs:
      artifactName: 'git-sdk-64-minimal'
      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: vcpkg-artifacts'
    inputs:
      artifactName: 'vcpkg-artifacts'
      targetPath: '$(Build.SourcesDirectory)'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit'
    inputs:
      artifactName: 'MinGit'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-nedmalloc'
  - powershell: |
      & compat\vcbuild\vcpkg_copy_dlls.bat release
      & git-sdk-64-minimal\usr\bin\bash.exe -lxec @"
        make -j5 USE_NED_ALLOCATOR=YesPlease &&
        make -j10 USE_NED_ALLOCATOR=YesPlease strip &&
        make -j10 USE_NED_ALLOCATOR=YesPlease DESTDIR=MinGit-msvc-nedmalloc SKIP_DASHED_BUILT_INS=1 gitexecdir=bin install
      "@
      if (!$?) { exit(1) }
    displayName: Build
    env:
      HOME: $(Build.SourcesDirectory)
      MSYSTEM: MINGW64
      MSVC: 1
      NDEBUG: 1
      DEVELOPER: 1
      NO_PERL: 1
      NO_TCLTK: 1
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: MinGit-msvc-nedmalloc'
    inputs:
      artifactName: 'MinGit-msvc-nedmalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-nedmalloc'

- job: msvc_mimalloc_build
  displayName: Windows (MSVC/mimalloc) Build
  dependsOn: download_prereqs
  condition: succeeded()
  pool: Hosted VS2017
  timeoutInMinutes: 240
  steps:
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: git-sdk-64-minimal'
    inputs:
      artifactName: 'git-sdk-64-minimal'
      targetPath: '$(Build.SourcesDirectory)\git-sdk-64-minimal'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: vcpkg-artifacts'
    inputs:
      artifactName: 'vcpkg-artifacts'
      targetPath: '$(Build.SourcesDirectory)'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit'
    inputs:
      artifactName: 'MinGit'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-mimalloc'
  - powershell: |
      & compat\vcbuild\vcpkg_copy_dlls.bat release
      & git-sdk-64-minimal\usr\bin\bash.exe -lxec @"
        make -j5 USE_MIMALLOC=YesPlease &&
        make -j10 USE_MIMALLOC=YesPlease strip &&
        make -j10 USE_MIMALLOC=YesPlease DESTDIR=MinGit-msvc-mimalloc SKIP_DASHED_BUILT_INS=1 gitexecdir=bin install
      "@
      if (!$?) { exit(1) }
    displayName: Build
    env:
      HOME: $(Build.SourcesDirectory)
      MSYSTEM: MINGW64
      MSVC: 1
      NDEBUG: 1
      DEVELOPER: 1
      NO_PERL: 1
      NO_TCLTK: 1
  - task: PublishPipelineArtifact@0
    displayName: 'Publish Pipeline Artifact: MinGit-msvc-mimalloc'
    inputs:
      artifactName: 'MinGit-msvc-mimalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-mimalloc'

- job: repack_test
  displayName: Test Matrix
  dependsOn: [gcc_build, gcc_nedmalloc_build, gcc_mimalloc_build, msvc_build, msvc_nedmalloc_build, msvc_mimalloc_build]
  condition: succeeded()
  pool: Hosted
  timeoutInMinutes: 240
  strategy:
    parallel: 5
  steps:
  - checkout: none
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-gcc-system-allocator.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit-gcc-system-allocator'
    inputs:
      artifactName: 'MinGit-gcc-system-allocator'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-system-allocator'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-gcc-nedmalloc.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit-gcc-nedmalloc'
    inputs:
      artifactName: 'MinGit-gcc-nedmalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-nedmalloc'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-gcc-mimalloc.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-gcc-mimalloc-eager.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit-gcc-mimalloc'
    inputs:
      artifactName: 'MinGit-gcc-mimalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-gcc-mimalloc'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-msvc-system-allocator.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit-msvc-system-allocator'
    inputs:
      artifactName: 'MinGit-msvc-system-allocator'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-system-allocator'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-msvc-nedmalloc.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit-msvc-nedmalloc'
    inputs:
      artifactName: 'MinGit-msvc-nedmalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-nedmalloc'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-msvc-mimalloc.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: bare-repo.git'
    inputs:
      artifactName: 'bare-repo.git'
      targetPath: '$(Build.SourcesDirectory)\bare-repo-msvc-mimalloc-eager.git'
  - task: DownloadPipelineArtifact@0
    displayName: 'Download Pipeline Artifact: MinGit-msvc-mimalloc'
    inputs:
      artifactName: 'MinGit-msvc-mimalloc'
      targetPath: '$(Build.SourcesDirectory)\MinGit-msvc-mimalloc'
  - powershell: |
      Write-Host "GCC with system allocator"
      & MinGit-gcc-system-allocator\cmd\git.exe -C bare-repo-gcc-system-allocator.git repack -d -l -A

      Write-Host "GCC with nedmalloc"
      & MinGit-gcc-nedmalloc\cmd\git.exe -C bare-repo-gcc-nedmalloc.git repack -d -l -A

      Write-Host "GCC with mimalloc"
      & MinGit-gcc-mimalloc\cmd\git.exe -C bare-repo-gcc-mimalloc.git repack -d -l -A

      Write-Host "GCC with mimalloc w/ eager region commit"
      & MinGit-gcc-mimalloc\cmd\git.exe --mimalloc-eager-region-commit -C bare-repo-gcc-mimalloc-eager.git repack -d -l -A

      Write-Host "MSVC with system allocator"
      & MinGit-msvc-system-allocator\cmd\git.exe -C bare-repo-msvc-system-allocator.git repack -d -l -A

      Write-Host "MSVC with nedmalloc"
      & MinGit-msvc-nedmalloc\cmd\git.exe -C bare-repo-msvc-nedmalloc.git repack -d -l -A

      Write-Host "MSVC with mimalloc"
      & MinGit-msvc-mimalloc\cmd\git.exe -C bare-repo-msvc-mimalloc.git repack -d -l -A

      Write-Host "MSVC with mimalloc w/ eager region commit"
      & MinGit-msvc-mimalloc\cmd\git.exe --mimalloc-eager-region-commit -C bare-repo-msvc-mimalloc-eager.git repack -d -l -A
    displayName: 'Test matrix'
    env:
      HOME: $(Build.SourcesDirectory)
      MSYSTEM: MINGW64
      GIT_TRACE_PERFORMANCE: 1
