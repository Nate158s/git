name: CI/PR

on: [push, pull_request]

env:
  DEVELOPER: 1

jobs:
  ci-config:
      runs-on: ubuntu-latest
      outputs:
        enabled: ${{ steps.check-ref.outputs.enabled }}
      steps:
        - name: try to clone ci-config branch
          continue-on-error: true
          run: |
            git -c protocol.version=2 clone \
              --no-tags \
              --single-branch \
              -b ci-config \
              --depth 1 \
              --no-checkout \
              --filter=blob:none \
              https://github.com/${{ github.repository }} \
              config-repo &&
              cd config-repo &&
              git checkout HEAD -- ci/config
        - id: check-ref
          name: check whether CI is enabled for ref
          run: |
            enabled=yes
            if test -x config-repo/ci/config/allow-ref &&
               ! config-repo/ci/config/allow-ref '${{ github.ref }}'
            then
              enabled=no
            fi
            echo "::set-output name=enabled::$enabled"

  windows-build:
    needs: ci-config
    if: needs.ci-config.outputs.enabled == 'yes'
    timeout-minutes: 15
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: download git-sdk-64-minimal
      shell: bash
      run: |
        ## Get artifact
        urlbase=https://dev.azure.com/git-for-windows/git/_apis/build/builds
        id=$(curl "$urlbase?definitions=22&statusFilter=completed&resultFilter=succeeded&\$top=1" |
          jq -r ".value[] | .id")
        download_url="$(curl "$urlbase/$id/artifacts" |
          jq -r '.value[] | select(.name == "git-sdk-64-minimal").resource.downloadUrl')"
        curl --connect-timeout 10 --retry 5 --retry-delay 0 --retry-max-time 240 \
          -o artifacts.zip "$download_url"

        ## Unzip and remove the artifact
        unzip artifacts.zip
        rm artifacts.zip
    - name: build
      shell: powershell
      env:
        HOME: ${{runner.workspace}}
        MSYSTEM: MINGW64
        NO_PERL: 1
      run: |
        & .\git-sdk-64-minimal\usr\bin\bash.exe -lc @"
        printf '%s\n' /git-sdk-64-minimal/ >>.git/info/exclude

          ci/run-build-and-tests.sh
        "@
  vs-build:
    needs: ci-config
    if: needs.ci-config.outputs.enabled == 'yes'
    timeout-minutes: 15
    env:
      MSYSTEM: MINGW64
      NO_PERL: 1
      GIT_CONFIG_PARAMETERS: "'user.name=CI' 'user.email=ci@git'"
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - name: download git-sdk-64-minimal
      shell: bash
      run: |
        ## Get artifact
        urlbase=https://dev.azure.com/git-for-windows/git/_apis/build/builds
        id=$(curl "$urlbase?definitions=22&statusFilter=completed&resultFilter=succeeded&\$top=1" |
          jq -r ".value[] | .id")
        download_url="$(curl "$urlbase/$id/artifacts" |
          jq -r '.value[] | select(.name == "git-sdk-64-minimal").resource.downloadUrl')"
        curl --connect-timeout 10 --retry 5 --retry-delay 0 --retry-max-time 240 \
          -o artifacts.zip "$download_url"

        ## Unzip and remove the artifact
        unzip artifacts.zip
        rm artifacts.zip
    - name: generate Visual Studio solution
      shell: powershell
      run: |
        & .\git-sdk-64-minimal\usr\bin\bash.exe -lc @"
          make NDEBUG=1 DEVELOPER=1 vcxproj
        "@
        if (!$?) { exit(1) }
    - name: download vcpkg artifacts
      shell: powershell
      run: |
        $urlbase = "https://dev.azure.com/git/git/_apis/build/builds"
        $id = ((Invoke-WebRequest -UseBasicParsing "${urlbase}?definitions=9&statusFilter=completed&resultFilter=succeeded&`$top=1").content | ConvertFrom-JSON).value[0].id
        $downloadUrl = ((Invoke-WebRequest -UseBasicParsing "${urlbase}/$id/artifacts").content | ConvertFrom-JSON).value[0].resource.downloadUrl
        (New-Object Net.WebClient).DownloadFile($downloadUrl, "compat.zip")
        Expand-Archive compat.zip -DestinationPath . -Force
        Remove-Item compat.zip
    - name: add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.0.0
    - name: MSBuild
      run: msbuild git.sln -property:Configuration=Release -property:Platform=x64 -maxCpuCount:4 -property:PlatformToolset=v142
    - name: bundle artifact tar
      shell: powershell
      env:
        MSVC: 1
        VCPKG_ROOT: ${{github.workspace}}\compat\vcbuild\vcpkg
      run: |
        & compat\vcbuild\vcpkg_copy_dlls.bat release
        if (!$?) { exit(1) }
        & git-sdk-64-minimal\usr\bin\bash.exe -lc @"
          make -C t DEFAULT_TEST_TARGET=prove GIT_TEST_OPTS=\"--verbose-log -x --write-junit-xml\"
        "@
  regular:
    needs: ci-config
    if: needs.ci-config.outputs.enabled == 'yes'
    strategy:
      matrix:
        vector:
          - jobname: linux-gcc
            cc: gcc
            pool: ubuntu-latest
          - jobname: osx-clang
            cc: clang
            pool: macos-latest
          - jobname: osx-gcc
            cc: gcc
            pool: macos-latest
    env:
      CC: ${{matrix.vector.cc}}
      jobname: ${{matrix.vector.jobname}}
    runs-on: ${{matrix.vector.pool}}
    steps:
    - uses: actions/checkout@v1
    - run: ci/install-dependencies.sh
    - run: ci/run-build-and-tests.sh
      timeout-minutes: 5
    - run: ci/print-test-failures.sh
      if: failure()
    - name: Upload failed tests' directories
      if: failure() && env.FAILED_TEST_ARTIFACTS != ''
      uses: actions/upload-artifact@v1
      with:
        name: failed-tests-${{matrix.vector.jobname}}
        path: ${{env.FAILED_TEST_ARTIFACTS}}
