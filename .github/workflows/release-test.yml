name: "release-test"
on:
  push:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release Tag'
        required: true
        default: 'latest'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: "Get Release Asset"
        id: get-asset
        env:
          RELEASE: ${{ github.event.inputs.release }}
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { data } = await github.repos.getRelease({
                owner: 'microsoft', // context.repo.owner,
                repo: context.repo.repo,
                release_id: process.env.RELEASE || 'latest'
              })
            const assets = data.assets.filter(asset => asset.name.endsWith('.deb'))
            if (assets.length !== 1) {
              throw new Error(`Unexpected number of .deb assets: ${assets.length}`)
            }

            const fs = require('fs')
            const out = fs.createWriteStream(assets[0].name)
            const buffer = await github.repos.getReleaseAsset({
                headers: {
                  accept: 'application/octet-stream'
                },
                owner: 'microsoft', // context.repo.owner,
                repo: context.repo.repo,
                asset_id: assets[0].id
              })
              console.log(buffer)
              out.write(buffer.data)
              out.end()
            core.setOutput('name', assets[0].name)
      - name: DEBUG
        shell: bash
        run: |
          echo "name: ${{ steps.get-asset.outputs.name }}"
      - name: "Write repoclient config"
        uses: actions/github-script@v3
        env:
          AZURE_AAD_ID: dummy
          AAD_CLIENT_SECRET: dummy2
        with:
          script: |
            for (const key of ['AZURE_AAD_ID', 'AAD_CLIENT_SECRET']) {
              if (!process.env[key]) throw new Error(`Required env var ${key} is missing!`)
            }

            const config = {
              AADResource: 'https://microsoft.onmicrosoft.com/945999e9-da09-4b5b-878f-b66c414602c0',
              AADTenant: '72f988bf-86f1-41af-91ab-2d7cd011db47',
              AADAuthorityUrl: 'https://login.microsoftonline.com',
              server: 'azure-apt-cat.cloudapp.net',
              port: '443',

              AADClientId: process.env.AZURE_AAD_ID,
              AADClientSecret: process.env.AAD_CLIENT_SECRET,
              repositoryId: ''
            }

            const fs = require('fs')
            fs.writeFileSync('config.json', JSON.stringify(config, null, 2))
      - name: DEBUG config.json
        run: |
          set -x
          cat config.json